[metadata]
name = spaemis
keywords = openscm, runner, python, simple, climate, model
author = Jared Lewis
author_email = jared.lewis@climate-rescource.com
license = MIT License

description = Creation of inventory files for regional air quality modelling
description_file = README.rst
long_description_content_type = text/x-rst
long_description =
    spaemis
    =======

    spaemis is a tool for producing a coherent set of emissions for regional air quality
    modelling.

    spaemis can create projections of future emissions.



url = https://github.com/climate-resource/spaemis
# full list at https://pypi.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 4 - Beta
    License :: OSI Approved :: BSD License
    Intended Audience :: Developers
    Operating System :: OS Independent
    Intended Audience :: Science/Research
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.9
    Topic :: Scientific/Engineering

[options]
packages = find:
package_dir =
    =src
python_requires = >=3.9
install_requires =
    click
    scmdata>=0.14.2
    cattrs
    pyyaml
    xarray
    rioxarray
    geopandas

[options.packages.find]
where = src

[options.extras_require]
notebooks =
    ipywidgets
    notebook
    seaborn

tests =
    codecov
    coverage
    nbval
    pytest-cov
    pytest-mock
    pytest>=4.0

docs =
    sphinx >= 1.4
    sphinx_rtd_theme
    sphinx-click

dev =
    bandit
    black == 22.3.0
    flake8
    isort > 5
    mypy
    nbdime
    pydocstyle
    pylint >= 2.4.4
    twine
    %(docs)s
    %(notebooks)s
    %(tests)s


[options.entry_points]
console_scripts =
    spaemis = spaemis.main:cli

[flake8]
max-line-length = 88
ignore = E203, E266, E501, W503

[isort]
default_section = THIRDPARTY
# comma after multiline breaks like black:
include_trailing_comma = true
known_first_party = spaemis
profile = black

[mypy]
disallow_incomplete_defs = true
disallow_subclassing_any = true
ignore_missing_imports = true
no_implicit_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[pydocstyle]
# D213 - Multi-line docstring summary should start at the second line
# D402 - First line should not be the signature of the function
add_select = D213, D402
# D200 - One-line docstring should fit on one line with quotes
# D205 - 1 blank line required between summary line and description
# D400 - First line should end with a period
add_ignore = D200, D205, D400
convention = numpy
inherit = false
match = (?!test_|_version).*\.py

[tool:pytest]
testpaths = tests
